// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data/session.proto

package data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Session struct {
	User1        uint64                     `protobuf:"varint,1,opt,name=user1" json:"user1,omitempty"`
	User2        uint64                     `protobuf:"varint,2,opt,name=user2" json:"user2,omitempty"`
	StartingDate *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=starting_date,json=startingDate" json:"starting_date,omitempty"`
	EndDate      *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	Latitude     float64                    `protobuf:"fixed64,5,opt,name=latitude" json:"latitude,omitempty"`
	Longitude    float64                    `protobuf:"fixed64,6,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Session) GetUser1() uint64 {
	if m != nil {
		return m.User1
	}
	return 0
}

func (m *Session) GetUser2() uint64 {
	if m != nil {
		return m.User2
	}
	return 0
}

func (m *Session) GetStartingDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartingDate
	}
	return nil
}

func (m *Session) GetEndDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *Session) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Session) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func init() {
	proto.RegisterType((*Session)(nil), "data.Session")
}

func init() { proto.RegisterFile("data/session.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8d, 0xbd, 0x6a, 0xc3, 0x30,
	0x14, 0x85, 0x51, 0xeb, 0xbf, 0xaa, 0xed, 0x22, 0x3a, 0x08, 0x53, 0xa8, 0xe9, 0xe4, 0x49, 0xa6,
	0x2e, 0x9d, 0xbb, 0xf4, 0x09, 0xdc, 0xec, 0x41, 0x46, 0x37, 0x42, 0x60, 0x4b, 0xc6, 0xba, 0x7e,
	0xe6, 0xbc, 0x46, 0x88, 0x84, 0xe2, 0x31, 0xe3, 0xf9, 0xce, 0xfd, 0xee, 0xa1, 0x4c, 0x49, 0x94,
	0x9d, 0x07, 0xef, 0x8d, 0xb3, 0x62, 0x59, 0x1d, 0x3a, 0x96, 0x5d, 0x59, 0xfd, 0xa1, 0x9d, 0xd3,
	0x13, 0x74, 0x81, 0x8d, 0xdb, 0xa9, 0x43, 0x33, 0x83, 0x47, 0x39, 0x2f, 0xf1, 0xec, 0xf3, 0x4c,
	0x68, 0xf9, 0x1f, 0x45, 0xf6, 0x46, 0xf3, 0xcd, 0xc3, 0xfa, 0xc5, 0x49, 0x43, 0xda, 0x6c, 0x88,
	0x21, 0xd1, 0x9e, 0x3f, 0xec, 0xb4, 0x67, 0xbf, 0xf4, 0xd5, 0xa3, 0x5c, 0xd1, 0x58, 0x7d, 0x54,
	0x12, 0x81, 0x3f, 0x36, 0xa4, 0x7d, 0xee, 0x6b, 0x11, 0x07, 0x45, 0x1a, 0x14, 0x87, 0x34, 0x38,
	0xbc, 0x24, 0xe1, 0x4f, 0x22, 0xb0, 0x1f, 0x5a, 0x81, 0x55, 0xd1, 0xcd, 0xee, 0xba, 0x25, 0x58,
	0x15, 0xb4, 0x9a, 0x56, 0x93, 0x44, 0x83, 0x9b, 0x02, 0x9e, 0x37, 0xa4, 0x25, 0xc3, 0x2d, 0xb3,
	0x77, 0xfa, 0x34, 0x39, 0xab, 0x63, 0x59, 0x84, 0x72, 0x07, 0x63, 0x11, 0xde, 0x7e, 0x5f, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xae, 0x2d, 0x65, 0xd4, 0x2d, 0x01, 0x00, 0x00,
}
